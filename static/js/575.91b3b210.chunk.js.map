{"version":3,"file":"static/js/575.91b3b210.chunk.js","mappings":"2UAEMA,EAAc,mCACpBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAY,kCAEZC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,mEACuCD,IAFrC,uBACjBI,EADiB,EACjBA,KADiB,kBAKlBA,EAAKC,SALa,2CAAH,qDAQXC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,oBACoCP,EADpC,oBADG,uBAClBI,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZI,EAAW,mCAAG,WAAMC,GAAN,yFACFR,EAAAA,EAAAA,IAAA,4CAErB,CACES,OAAQ,CACNC,QAASX,EACTY,SAAU,QACVH,MAAAA,EACAI,KAAM,EACNC,eAAe,KATI,uBACjBV,EADiB,EACjBA,KADiB,kBAclBA,EAAKC,SAda,2CAAH,sDAiBXU,EAAQ,mCAAG,WAAMR,GAAN,0FACCN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,YAA8B,CACxDG,OAAQ,CACNC,QAASX,EACTY,SAAU,WAJQ,uBACdR,EADc,EACdA,KADc,kBAOfA,EAAKY,MAPU,2CAAH,sDAURC,EAAe,mCAAG,WAAMV,GAAN,0FACNN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,YAA8B,CACxDG,OAAQ,CACNC,QAASX,EACTY,SAAU,QACVC,KAAM,KALmB,uBACrBT,EADqB,EACrBA,KADqB,kBAQtBA,EAAKC,QAAQ,IARS,2CAAH,qD,kKC/Cfa,E,QAAQC,GAAAA,GAAH,oE,kBCoClB,EA/Ba,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,2FACdF,GAAa,GADC,mBAGWvB,EAAAA,EAAAA,MAHX,OAGN0B,EAHM,OAIZP,EAAQO,GAJI,gDAMZL,EAAS,yBANG,yBAQZE,GAAa,GARD,4EAAH,qDAYbE,GACD,GAAE,CAACL,KAGF,6BACE,SAACL,EAAD,yCACCO,IAAa,SAAC,IAAD,IACbF,GAASO,EAAAA,GAAAA,MAAYP,IACtB,SAACQ,EAAA,EAAD,CAAUC,MAAOX,MAGtB,C,kHClCYY,EAAgBd,EAAAA,GAAAA,GAAH,4EAMbe,EAAWf,EAAAA,GAAAA,GAAH,wUAaRgB,EAAMhB,EAAAA,GAAAA,IAAH,qF,SCQhB,EAzBiB,SAAC,GAAe,IAAba,EAAY,EAAZA,MACZI,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACJ,EAAD,UACGD,EAAMM,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAC7B,OACE,SAACP,EAAD,WACE,UAAC,KAAD,CAAMQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA1C,WACE,SAACD,EAAD,CACEU,IAAK3C,EAAAA,GAAYqC,EACjBO,IAAKL,EACLM,QAAQ,OACRC,MAAO,OAET,0BACE,uBAAIP,UATKD,EAclB,KAGN,C","sources":["ApiService/ApiServise.jsx","Pages/Home/Home.styled.js","Pages/Home/Home.jsx","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst MOVIEDB_KEY = '817d0625144161de217baa97c19455ca';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${MOVIEDB_KEY}`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${MOVIEDB_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        api_key: MOVIEDB_KEY,\n        language: 'en-US',\n        query,\n        page: 1,\n        include_adult: false,\n      },\n    }\n  );\n\n  return data.results;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: MOVIEDB_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: MOVIEDB_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data.results[0];\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin: 0;\n  padding: 30px 0 30px 50px;\n`;\n","import { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { getTrending } from 'ApiService/ApiServise';\nimport FilmList from 'components/FilmList/FilmList';\nimport { Title } from './Home.styled';\nimport MyLoader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [film, setFilm] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getFilm = async () => {\n      setIsLoading(true);\n      try {\n        const trending = await getTrending();\n        setFilm(trending);\n      } catch {\n        setError('Ooops! Try reset page');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getFilm();\n  }, [error]);\n\n  return (\n    <main>\n      <Title>Trending film on this week</Title>\n      {isLoading && <MyLoader />}\n      {error && toast.error(error)}\n      <FilmList films={film} />\n    </main>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const FilmListInner = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const FilmItem = styled.li`\n  flex-basis: calc((100% - 60px) / 4);\n  width: 100%;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 26px -1px rgba(59, 15, 232, 0.56);\n    -webkit-box-shadow: 0px 0px 26px -1px rgba(59, 15, 232, 0.56);\n    -moz-box-shadow: 0px 0px 26px -1px rgba(59, 15, 232, 0.56);\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n","import { IMAGE_URL } from 'ApiService/ApiServise';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FilmListInner, FilmItem, Img } from './FilmList.styled';\n\nconst FilmList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <FilmListInner>\n      {films.map(({ poster_path, id, title }) => {\n        return (\n          <FilmItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Img\n                src={IMAGE_URL + poster_path}\n                alt={title}\n                loading=\"lazy\"\n                width={250}\n              />\n              <div>\n                <p>{title}</p>\n              </div>\n            </Link>\n          </FilmItem>\n        );\n      })}\n    </FilmListInner>\n  );\n};\n\nexport default FilmList;\n"],"names":["MOVIEDB_KEY","axios","IMAGE_URL","getTrending","data","results","getMovieById","movieId","searchMovie","query","params","api_key","language","page","include_adult","getCasts","cast","getMovieReviews","Title","styled","useState","film","setFilm","error","setError","isLoading","setIsLoading","useEffect","getFilm","trending","toast","FilmList","films","FilmListInner","FilmItem","Img","location","useLocation","map","poster_path","id","title","to","state","from","src","alt","loading","width"],"sourceRoot":""}