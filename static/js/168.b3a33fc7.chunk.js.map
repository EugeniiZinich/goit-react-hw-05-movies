{"version":3,"file":"static/js/168.b3a33fc7.chunk.js","mappings":"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","sources":["ApiService/ApiServise.jsx","Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst MOVIEDB_KEY = '817d0625144161de217baa97c19455ca';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${MOVIEDB_KEY}`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${MOVIEDB_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        api_key: MOVIEDB_KEY,\n        language: 'en-US',\n        query,\n        page: 1,\n        include_adult: false,\n      },\n    }\n  );\n\n  return data.results;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: MOVIEDB_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: MOVIEDB_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data.results[0];\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding-top: 20px;\n`;\n\nexport const Main = styled.main`\n  margin-top: 20px;\n`;\n\nexport const NavItem = styled.li`\n  margin-bottom: 30px;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  margin-top: 30px;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  margin-top: 20px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: red;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: white;\n    background-color: red;\n  }\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { IMAGE_URL } from 'ApiService/ApiServise';\nimport { getMovieById } from 'ApiService/ApiServise';\nimport { Wrapper, Link, NavList, NavItem, Main } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const requestDetails = async () => {\n      try {\n        const movieInfo = await getMovieById(Number(movieId));\n\n        setMovie(movieInfo);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    requestDetails();\n  }, [movieId]);\n\n  const { poster_path, overview, title, genres, release_date, vote_average } =\n    movie;\n\n  const dateFilm = new Date(release_date).getFullYear();\n  return (\n    <Main>\n      <Link to={backLinkHref}> GO BACK</Link>\n\n      <Wrapper>\n        <img\n          src={IMAGE_URL + poster_path}\n          alt={title}\n          loading=\"lazy\"\n          width={250}\n        />\n\n        <div>\n          <h2>\n            {title}({dateFilm})\n          </h2>\n          <p>\n            <b>User score: </b>\n            {vote_average ? vote_average.toFixed(1) : 'not found'}\n          </p>\n          <p>\n            <b>Overview</b>: {overview}\n          </p>\n          <p>\n            <b>Genres </b>\n            {genres && genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </Wrapper>\n\n      <NavList>\n        <NavItem>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </NavItem>\n      </NavList>\n\n      <Outlet />\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MOVIEDB_KEY","axios","IMAGE_URL","getTrending","data","results","getMovieById","movieId","searchMovie","query","params","api_key","language","page","include_adult","getCasts","cast","getMovieReviews","Wrapper","styled","Main","NavItem","NavList","Link","NavLink","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","requestDetails","Number","movieInfo","console","log","poster_path","overview","title","genres","release_date","vote_average","dateFilm","Date","getFullYear","to","src","alt","loading","width","toFixed","map","genre","name","join"],"sourceRoot":""}