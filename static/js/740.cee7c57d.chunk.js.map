{"version":3,"file":"static/js/740.cee7c57d.chunk.js","mappings":"2UAEMA,EAAc,mCACpBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAY,kCAEZC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,mEACuCD,IAFrC,uBACjBI,EADiB,EACjBA,KADiB,kBAKlBA,EAAKC,SALa,2CAAH,qDAQXC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,oBACoCP,EADpC,oBADG,uBAClBI,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZI,EAAW,mCAAG,WAAMC,GAAN,yFACFR,EAAAA,EAAAA,IAAA,4CAErB,CACES,OAAQ,CACNC,QAASX,EACTY,SAAU,QACVH,MAAAA,EACAI,KAAM,EACNC,eAAe,KATI,uBACjBV,EADiB,EACjBA,KADiB,kBAclBA,EAAKC,SAda,2CAAH,sDAiBXU,EAAQ,mCAAG,WAAMR,GAAN,0FACCN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,YAA8B,CACxDG,OAAQ,CACNC,QAASX,EACTY,SAAU,WAJQ,uBACdR,EADc,EACdA,KADc,kBAOfA,EAAKY,MAPU,2CAAH,sDAURC,EAAe,mCAAG,WAAMV,GAAN,0FACNN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,YAA8B,CACxDG,OAAQ,CACNC,QAASX,EACTY,SAAU,QACVC,KAAM,KALmB,uBACrBT,EADqB,EACrBA,KADqB,kBAQtBA,EAAKC,QAAQ,IARS,2CAAH,qD,oKC/Cfa,EAAQC,EAAAA,GAAAA,MAAH,qMAWLC,EAAYD,EAAAA,GAAAA,OAAH,8R,SCctB,EAxBmB,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC9B,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAOA,OACE,0BACE,kBAAMC,SAPW,SAAAC,GACnBA,EAAEC,iBACFP,EAASG,EACV,EAIG,WACE,SAACN,EAAD,CACEW,KAAK,OACLC,KAAK,OACLR,MAAOA,EACPS,YAAY,0CACZV,SAAU,SAAAM,GAAC,OAAIF,EAAYE,EAAEK,OAAOV,MAAzB,KAEb,SAACF,EAAD,CAAWS,KAAK,SAAhB,wBAIP,E,6BC8BD,EA/Ce,WAAO,IAAD,EACnB,GAA0BN,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOU,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMb,EAAQ,UAAGY,EAAaE,IAAI,eAApB,QAA+B,GAC7C,GAAkCf,EAAAA,EAAAA,WAAS,GAA3C,eAAOgB,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAiB,KAAbjB,EAAJ,CAIA,IAAMkB,EAAmB,mCAAG,2FAC1BF,GAAa,GADa,mBAGFhC,EAAAA,EAAAA,IAAYgB,GAHV,OAGlBmB,EAHkB,OAIxBT,EAASS,GAJe,gDAMxBC,EAAAA,GAAAA,MAAA,0CANwB,yBAQxBJ,GAAa,GARW,4EAAH,qDAYzBE,GAdC,CAeF,GAAE,CAAClB,IAWJ,OACE,4BACE,SAAC,EAAD,CAAYH,SAXU,SAAAS,GACnBA,EAKLO,EAAgB,CAAEP,KAAMA,EAAKe,cAAcC,SAJzCF,EAAAA,GAAAA,MAAY,kBAKf,IAKIL,IAAa,SAAC,IAAD,IACbN,EAAMc,OAAS,IAAK,SAACC,EAAA,EAAD,CAAUC,MAAOhB,KACtC,0BACE,SAAC,KAAD,QAIP,C,kHCnDYiB,EAAgB/B,EAAAA,GAAAA,GAAH,4EAMbgC,EAAWhC,EAAAA,GAAAA,GAAH,wUAaRiC,EAAMjC,EAAAA,GAAAA,IAAH,qF,SCQhB,EAzBiB,SAAC,GAAe,IAAb8B,EAAY,EAAZA,MACZI,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACJ,EAAD,UACGD,EAAMM,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAC7B,OACE,SAACP,EAAD,WACE,UAAC,KAAD,CAAMQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA1C,WACE,SAACD,EAAD,CACEU,IAAK5D,EAAAA,GAAYsD,EACjBO,IAAKL,EACLM,QAAQ,OACRC,MAAO,OAET,0BACE,uBAAIP,UATKD,EAclB,KAGN,C","sources":["ApiService/ApiServise.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","Pages/Movies/Movies.jsx","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst MOVIEDB_KEY = '817d0625144161de217baa97c19455ca';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${MOVIEDB_KEY}`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${MOVIEDB_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        api_key: MOVIEDB_KEY,\n        language: 'en-US',\n        query,\n        page: 1,\n        include_adult: false,\n      },\n    }\n  );\n\n  return data.results;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: MOVIEDB_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: MOVIEDB_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data.results[0];\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 250px;\n  outline: none;\n  border: 1.5px solid red;\n  border-radius: 20px;\n  margin-top: 25px;\n  margin-bottom: 25px;\n  margin-right: 15px;\n  padding: 10px;\n`;\n\nexport const SearchBtn = styled.button`\n  border: 20px;\n  color: black;\n  background-color: transparent;\n  text-decoration: none;\n  font-weight: 500;\n  cursor: pointer;\n  padding: 8px 16px;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: red;\n    border-radius: 20px;\n  }\n`;\n","import { useState } from 'react';\nimport { Input, SearchBtn } from './SearchForm.styled';\n\nconst SearchForm = ({ onChange, value }) => {\n  const [filmName, setFilmName] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onChange(filmName);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          placeholder='Enter correct film name. ex \"SpiderMan\"'\n          onChange={e => setFilmName(e.target.value)}\n        />\n        <SearchBtn type=\"submit\">SEARCH</SearchBtn>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport FilmList from 'components/FilmList/FilmList';\nimport { searchMovie } from 'ApiService/ApiServise';\nimport MyLoader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movie, setMovie] = useState({});\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get('name') ?? '';\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (filmName === '') {\n      return;\n    }\n\n    const getSearchFilmByName = async () => {\n      setIsLoading(true);\n      try {\n        const getFilm = await searchMovie(filmName);\n        setMovie(getFilm);\n      } catch (error) {\n        toast.error(`Search is not working. Try again later`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getSearchFilmByName();\n  }, [filmName]);\n\n  const updateQueryString = name => {\n    if (!name) {\n      toast.error('Enter film name');\n      return;\n    }\n\n    setSearchParams({ name: name.toLowerCase().trim() });\n  };\n\n  return (\n    <div>\n      <SearchForm onChange={updateQueryString} />\n      {isLoading && <MyLoader />}\n      {movie.length > 0 && <FilmList films={movie} />}\n      <div>\n        <Toaster />\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const FilmListInner = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const FilmItem = styled.li`\n  flex-basis: calc((100% - 60px) / 4);\n  width: 100%;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 26px -1px rgba(59, 15, 232, 0.56);\n    -webkit-box-shadow: 0px 0px 26px -1px rgba(59, 15, 232, 0.56);\n    -moz-box-shadow: 0px 0px 26px -1px rgba(59, 15, 232, 0.56);\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n","import { IMAGE_URL } from 'ApiService/ApiServise';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FilmListInner, FilmItem, Img } from './FilmList.styled';\n\nconst FilmList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <FilmListInner>\n      {films.map(({ poster_path, id, title }) => {\n        return (\n          <FilmItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Img\n                src={IMAGE_URL + poster_path}\n                alt={title}\n                loading=\"lazy\"\n                width={250}\n              />\n              <div>\n                <p>{title}</p>\n              </div>\n            </Link>\n          </FilmItem>\n        );\n      })}\n    </FilmListInner>\n  );\n};\n\nexport default FilmList;\n"],"names":["MOVIEDB_KEY","axios","IMAGE_URL","getTrending","data","results","getMovieById","movieId","searchMovie","query","params","api_key","language","page","include_adult","getCasts","cast","getMovieReviews","Input","styled","SearchBtn","onChange","value","useState","filmName","setFilmName","onSubmit","e","preventDefault","type","name","placeholder","target","movie","setMovie","useSearchParams","searchParams","setSearchParams","get","isLoading","setIsLoading","useEffect","getSearchFilmByName","getFilm","toast","toLowerCase","trim","length","FilmList","films","FilmListInner","FilmItem","Img","location","useLocation","map","poster_path","id","title","to","state","from","src","alt","loading","width"],"sourceRoot":""}