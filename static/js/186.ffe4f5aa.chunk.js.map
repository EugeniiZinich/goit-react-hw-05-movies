{"version":3,"file":"static/js/186.ffe4f5aa.chunk.js","mappings":"2UAEMA,EAAc,mCACpBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAY,kCAEZC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,mEACuCD,IAFrC,uBACjBI,EADiB,EACjBA,KADiB,kBAKlBA,EAAKC,SALa,2CAAH,qDAQXC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,oBACoCP,EADpC,oBADG,uBAClBI,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZI,EAAW,mCAAG,WAAMC,GAAN,yFACFR,EAAAA,EAAAA,IAAA,4CAErB,CACES,OAAQ,CACNC,QAASX,EACTY,SAAU,QACVH,MAAAA,EACAI,KAAM,EACNC,eAAe,KATI,uBACjBV,EADiB,EACjBA,KADiB,kBAclBA,EAAKC,SAda,2CAAH,sDAiBXU,EAAQ,mCAAG,WAAMR,GAAN,0FACCN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,YAA8B,CACxDG,OAAQ,CACNC,QAASX,EACTY,SAAU,WAJQ,uBACdR,EADc,EACdA,KADc,kBAOfA,EAAKY,MAPU,2CAAH,sDAURC,EAAe,mCAAG,WAAMV,GAAN,0FACNN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,YAA8B,CACxDG,OAAQ,CACNC,QAASX,EACTY,SAAU,QACVC,KAAM,KALmB,uBACrBT,EADqB,EACrBA,KADqB,kBAQtBA,EAAKC,QAAQ,IARS,2CAAH,qD,+GCxB5B,UArBgB,WACd,IAAQE,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAA8BY,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIN,EAAAA,EAAAA,IAAgBO,OAAOjB,IAF3B,OAETkB,EAFS,OAGfJ,EAAWI,EAAKC,SAHD,uGAAH,qDAMhBH,GACD,GAAE,CAAChB,KAGF,0BACE,uBAAIa,KAGT,C","sources":["ApiService/ApiServise.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst MOVIEDB_KEY = '817d0625144161de217baa97c19455ca';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${MOVIEDB_KEY}`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${MOVIEDB_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        api_key: MOVIEDB_KEY,\n        language: 'en-US',\n        query,\n        page: 1,\n        include_adult: false,\n      },\n    }\n  );\n\n  return data.results;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: MOVIEDB_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: MOVIEDB_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data.results[0];\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'ApiService/ApiServise';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState('');\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const info = await getMovieReviews(Number(movieId));\n        setReviews(info.content);\n      } catch (error) {}\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <p>{reviews}</p>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["MOVIEDB_KEY","axios","IMAGE_URL","getTrending","data","results","getMovieById","movieId","searchMovie","query","params","api_key","language","page","include_adult","getCasts","cast","getMovieReviews","useParams","useState","reviews","setReviews","useEffect","getReviews","Number","info","content"],"sourceRoot":""}